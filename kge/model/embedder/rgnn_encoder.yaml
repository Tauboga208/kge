
rgnn_encoder:
  class_name: RgnnEncoder

  # arguments for all layers:
  num_layers: 2
  1_out_dim: -1
  2_out_dim: -1
  3_out_dim: -1
  4_out_dim: -1

  activation: relu
  weight_init: xavier_normal_
  bias: True 
  bias_init: zeros_ # ones_, uniform_, normal_ ... (from torch.nn.init)
  
  weight_decomposition: None # block, basis, relation_basis
  num_blocks_or_bases: -1

  edge_dropout: 0.0 # drop edges from the graphs
  self_edge_dropout: 0.0 # drop self-edges from the graph
  emb_entity_dropout: 0.0  # used on the entity embedding output of the rgnn layer
  
  rel_transformation: linear # self, linear, convoluted
  
  layer_type: message_passing # other options: torch_rgcn
  # Specific Arguments for the MessagePassingLayer
  message_passing_args:
    propagation: direction  # per_relation, single, single_with_self_edge_weight
    composition: sub # neighbor, mult, ccorr
    message_weight: False
    edge_norm: True 
    emb_propagation_dropout: 0.0 # used after the propagation function in the
                                 # message passing layer
    attention: False
    num_heads: 1
  torch_rgcn_args:
    vertical_stacking: False
   
  