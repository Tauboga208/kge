import: [rgnn_encoder, lookup_embedder, transe, conve, distmult]

compgcn:
  class_name: CompGCN
  # type: rgnn
  entity_embedder:
    type: lookup_embedder
    initialize: xavier_normal_
    regularize: ''
    +++: +++
  relation_embedder:
    type: lookup_embedder
    initialize: xavier_normal_
    regularize: ''
    +++: +++
  encoder:
    type: rgnn_encoder
    # CompGCN specific RGNN parameters:
    edge_norm: True
    activation: tanh
    emb_propagation_dropout: 0.1  # used after the propagation function in the rgnn layer
                       # (except for self-edges )
    emb_entity_dropout: 0.1  # used on the entity output of the rgnn layer
    self_edge_dropout: 0.0
    edge_dropout: 0.0
    bias: False 
    num_layers: 2
    propagation: direction  # use a different weight matrix for in-direction,
                            # out-direction and the self-loop
    composition: sub
    num_blocks_or_bases: -1
    # num_basis: -1
    +++: +++
  decoder: # specify which scorer to use as a decoder in the RGNN, one of the
           # scoring functions. The original CompGCN model supports TransE,
           # and Distmult but in principle any other function can be imported
           # or passed
    model: transe
    # transe:
    #   l_norm: 1.01
    #   +++: +++
    scorer: TransEScorer 
    